######### NOT REMOVE START ##################################
[include plr.cfg]
[include mainsail.cfg]
[include timelapse.cfg]
[include smartpad-adxl345.cfg]
[include smartpad-cpu-temp.cfg]
[include moonraker_obico_macros.cfg]
[exclude_object]
[save_variables]
filename: ~/printer_data/config/variables.cfg
[gcode_arcs]
resolution: 0.1

[respond]
default_type: echo
default_prefix: echo:
[display_status]
[pause_resume]

######### NOT REMOVE END ##################################

#YUMI SMART PAD use OPEN SOURCE CODE 
#all documentation about klipper is available here : https://www.klipper3d.org/
#all documentation about Moonraker is available here : https://moonraker.readthedocs.io/
#all documentation about KlipperScreen is avaialble here : https://klipperscreen.readthedocs.io/
#all documentation about Mainsail is available here : https://docs.mainsail.xyz/
#all documentation about Crowsnest is available here : https://crowsnest.mainsail.xyz/
#all documentation about YUMI-LAB is available here : https://wiki.yumi-lab.com/


# MKS Nano V3 By：zzcat
#make menuconfig--STM32F407--48KiB bootloader--8MHZ--USB(PA11/PA12)
# The "make flash" command does not work on the MKS Robin. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "Robin_nano_v3.bin" on an SD card and then restart the
# MKS Robin with that SD card.
#Pad-Vol:1.2
#2023-01-10

######################################################
##################   FLSUN SR   ####################
######################################################
[mcu]
#ls /dev/serial/by-id/*
serial: /dev/serial/by-path/platform-5200000.ehci1-controller-usb-0:1.4:1.0
restart_method: command

######################################################
###############       Stockage PI       ##############
######################################################
[virtual_sdcard]
path: ~/printer_data/gcodes

[stepper_a]
step_pin: PE3
dir_pin: PE2
enable_pin: !PE4
microsteps: 16
rotation_distance: 40   ##rotation_distance = ((360°/1.8°) * microsteps) / 80 #
endstop_pin: PA15 #X-Min, PE4:X-Max
#position_endstop: 336
homing_speed: 40
#arm_length = 315

[stepper_b]
step_pin: PE0
dir_pin: PB9
enable_pin: !PE1
microsteps: 16
rotation_distance: 40
endstop_pin: PD2  #Y-Min, PJ0:Y-Max
#position_endstop: 336
#arm_length = 315

[stepper_c]
step_pin: PB5
dir_pin: PB4
enable_pin: !PB8
microsteps: 16
rotation_distance: 40
endstop_pin: PC4  #Z-Min, PD2:Z-Max
#position_endstop: 336
#arm_length = 315

[extruder]
step_pin: PD6
dir_pin: !PD3
enable_pin: !PB3
microsteps: 16
rotation_distance: 7.805
nozzle_diameter: 0.4
filament_diameter: 1.750
heater_pin: PE5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC1
min_temp: -5
max_temp: 275
pressure_advance: 0.04
control = pid
pid_kp = 18.240
pid_ki = 0.558
pid_kd = 149.109
max_extrude_cross_section: 110 
max_extrude_only_distance: 1100


[heater_bed]
heater_pin: PA0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
min_temp: 0
max_temp: 115
control = pid
pid_kp = 71.041
pid_ki = 1.422
pid_kd = 887.123


[printer]
kinematics: delta
max_velocity: 300
max_accel: 4000
max_accel_to_decel: 2000
square_corner_velocity: 5
max_z_velocity: 300
#delta_radius: 151.7
print_radius: 132
minimum_z_position=-5



[delta_calibrate]
radius: 120
horizontal_move_z: 25
Speed: 10

[fan]
pin: PC14

[heater_fan heat_sink_fan]
pin: PB0

[probe]
pin: !PC8
x_offset: 0
y_offset: 0
z_offset: 16.85
speed: 10
samples: 3
samples_result: average
sample_retract_dist: 3
samples_tolerance: 0.02
samples_tolerance_retries: 5

[bed_mesh]
speed: 50
horizontal_move_z: 25
mesh_radius: 120
mesh_origin: 0,0
round_probe_count: 7
algorithm: bicubic

[filament_switch_sensor filament_sensor]
pause_on_runout: True
runout_gcode: PAUSE 
switch_pin: PA4

[idle_timeout]
gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 600
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

########################################
# TMC UART configuration
########################################

[tmc2209 stepper_a]
uart_pin: PD5
run_current: 1.138
hold_current: 0.5
stealthchop_threshold: 999999

#sense_resistor: 0.110
#interpolate: True
#diag_pin: ^PE5      # Set to MCU pin connected to TMC DIAG pin
#driver_SGTHRS: 60   # 255 is most sensitive value, 0 is least sensitiv      # Set to MCU pin connected to TMC DIAG pin


[tmc2209 stepper_b]
uart_pin: PD7
run_current: 1.138
hold_current: 0.5
stealthchop_threshold: 999999

#sense_resistor: 0.110
#interpolate: True
#diag_pin: ^PJ1      # Set to MCU pin connected to TMC DIAG pin
#driver_SGTHRS: 60  # 255 is most sensitive value, 0 is least sensitiv

[tmc2209 stepper_c]
uart_pin: PD4
#interpolate: True
run_current: 1.138
hold_current: 0.5
#sense_resistor: 0.110
stealthchop_threshold: 999999
#diag_pin: ^PD2     # Set to MCU pin connected to TMC DIAG pin
#driver_SGTHRS: 255  # 255 is most sensitive value, 0 is least sensitiv

[tmc2209 extruder]
uart_pin: PD9
#interpolate: True
run_current: 1.1
hold_current: 0.5
#sense_resistor: 0.110
stealthchop_threshold: 999999

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC0, EXP1_3=PH0, EXP1_5=PA1, EXP1_7=PA5, EXP1_9=<GND>,
    EXP1_2=PC2, EXP1_4=PH1, EXP1_6=PA3, EXP1_8=PA7, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PB3, EXP2_3=PC6, EXP2_5=PC4, EXP2_7=PL0,  EXP2_9=<GND>,
    EXP2_2=PB1, EXP2_4=PB0, EXP2_6=PB2, EXP2_8=PG0, EXP2_10=<NC>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "ssp1"
# See the MKS Lcd Config path file for definitions of common LCD displays.
#[include mks_lcd_12864.cfg]



#[safe_z_home]
#home_xy_position: 100,100 # Change coordinates to the center of your print bed
#speed: 50
#z_hop: 10                 # Move up 10mm
#z_hop_speed: 5


#[gcode_macro G29]
#gcode:
#    BED_MESH_CLEAR
#    G28
#    BED_MESH_CALIBRATE
#    BED_MESH_PROFILE SAVE=name
#    SAVE_CONFIG
#    BED_MESH_PROFILE LOAD=name



#####################################################################
#MACRO
#####################################################################

[gcode_macro PRINT_START]  
gcode:
    RESPOND MSG="STARTING TO PRINT"
    save_last_file
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=True
    G92 E0
    BED_MESH_CLEAR                                           
	  G90             
    BED_MESH_PROFILE LOAD=default   
    CLEAR_PAUSE
    G28          

[gcode_macro PRINT_END]
gcode:    
  SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
  clear_last_file
  RUN_SHELL_COMMAND CMD=clear_plr
  G1 X0 Y0
  M104 S0 ; Turn off extruder
  M140 S0 ; Turn off heated bed
  M106 S0 ; Turn off extruder fan
  M107 ; Turn off chamber fan
  M84 ; Disable motors

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(0) %}      #edit to your park position
    {% set y = params.Y|default(-120) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% if printer["filament_switch_sensor filament_sensor"].filament_detected == True %} #判断耗材传感器是否有耗材，true代表有耗材
      {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
      {% if 'VELOCITY' in params|upper %}
        {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
      {%else %}
        {% set get_params = "" %}
      {% endif %}
    ##### end of definitions #####
      G91
      {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E{e} F2100
      {% else %}
        {action_respond_info("Extruder not hot enough")}
      {% endif %}   
      RESUME_BASE {get_params}
    {% endif %} 

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  G28


[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.025 MOVE=1

[gcode_macro ZDOWN]
gcode:
   SET_GCODE_OFFSET Z_ADJUST=-0.025 MOVE=1

[gcode_macro UNLOAD_FILAMENT] #unload filament
gcode:
    G91
    G1 E20 F800
    G1 E-1000 F800
    G90

[gcode_macro LOAD_FILAMENT] #load filament
gcode:
    G91
    G1 E950 F800
    G1 E50 F300
    G90

[gcode_macro SET_GCODE_OFFSET]
rename_existing: _SET_GCODE_OFFSET
gcode:
    {% if printer.save_variables.variables.gcode_offsets %}
        {% set offsets = printer.save_variables.variables.gcode_offsets %}
    {% else %} 
        {% set offsets = {'x': None,'y': None,'z': None} %}
    {% endif %}
    
    {% set ns = namespace(offsets={'x': offsets.x,'y': offsets.y,'z': offsets.z}) %}
    
    _SET_GCODE_OFFSET {% for p in params %}{'%s=%s '% (p, params[p])}{% endfor %}

    {%if 'X' in params %}{% set null = ns.offsets.update({'x': params.X}) %}{% endif %}
    {%if 'Y' in params %}{% set null = ns.offsets.update({'y': params.Y}) %}{% endif %}
    {%if 'Z' in params %}{% set null = ns.offsets.update({'z': params.Z}) %}{% endif %}
    {%if 'Z_ADJUST' in params %}
        {%if ns.offsets.z == None %}{% set null = ns.offsets.update({'z': 0}) %}{% endif %}
        {% set null = ns.offsets.update({'z': (ns.offsets.z | float) + (params.Z_ADJUST | float)}) %}
    {% endif %}
    SAVE_VARIABLE VARIABLE=gcode_offsets VALUE="{ns.offsets}"

[delayed_gcode LOAD_GCODE_OFFSETS]
initial_duration: 2
gcode:  
    {% if printer.save_variables.variables.gcode_offsets %}
        {% set offsets = printer.save_variables.variables.gcode_offsets %}

        _SET_GCODE_OFFSET {% for axis, offset in offsets.items() if offsets[axis] %}{ "%s=%s " % (axis, offset) }{% endfor %}

        { action_respond_info("Loaded gcode offsets from saved variables [%s]" % (offsets)) }
    {% endif %}|
    
[gcode_arcs]

[gcode_macro bed_level_1]
gcode:
  SET_GCODE_OFFSET Z=0
  G28
  delta_calibrate
  G1 X0 Y0 Z50 F4200
  G28
  save_config

[gcode_macro bed_level_2]
gcode:
  G28
  G1 X0 Y0 Z50 F4200
  bed_mesh_calibrate
  G1 X0 Y0 Z50 F4200
  G28
  save_config

[gcode_macro G29]
gcode:
      BED_MESH_CLEAR
      G28
      BED_MESH_CALIBRATE
      G0 X117 Y126 Z5 F3000
      G0 Z0 F300

[gcode_macro PID_EXTRUDER]
gcode:
  G28
  M106 S255
  PID_CALIBRATE HEATER=extruder TARGET=190
  SAVE_CONFIG

[gcode_macro PID_BED]
gcode:
  G28
  M106 S255
  PID_CALIBRATE HEATER=heater_bed TARGET=60
  SAVE_CONFIG

[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   
    {% endif %}

[gcode_macro M84]
rename_existing:M84.1
gcode:
      SET_STEPPER_ENABLE STEPPER=stepper_x enable=0
      SET_STEPPER_ENABLE STEPPER=stepper_y enable=0
      SET_STEPPER_ENABLE STEPPER=stepper_z enable=0
      SET_STEPPER_ENABLE STEPPER=extruder  enable=0
      SET_KINEMATIC_POSITION

[gcode_macro M205]
description: Sets square corner velocity.
  Usage: M205 [X<velocity>] [Y<velocity>]
gcode:
  {% if 'X' in params or 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY="{
      (params.X|default(0)|float, params.Y|default(0)|float)|min}"
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro M204]
description: Sets maximum accelleration.
  Usage: M204 [S<accel>] [P<accel> T<accel>]
rename_existing: M204.1
gcode:
  {% set f = params.F|default(0.5)|float %}
  {% if 'S' in params %}
  {% set s = params.S|float %}
  SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={ s * f }
  {% else %}
  {% if 'P' in params %}
  {% set p = params.P|float %}
  {% if 'T' in params %}
  {% set t = params.T|float %}
  {% if p < t %}
  SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
  {% else %}
  SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
  {% endif %}
  {% else %}
  SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
  {% endif %}
  {% elif 'T' in params %}
  {% set t = params.T|float %}
  SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
  {% endif %}
  {% endif %}
  
[gcode_macro M203]
description: Sets maximum velocity.
  Usage: M203 [X<velocity>] [Y<velocity>]
gcode:
  {% if 'X' in params or 'Y' in params %}
    {% set velocity = (params.X|default(params.Y)|float,
                       params.Y|default(params.X)|float)|min %}
    SET_VELOCITY_LIMIT VELOCITY="{velocity}"
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro M201]
description: Sets maximum accelleration.
  Usage: M201 [X<accel>] [Y<accel>]
gcode:
  {% if 'X' in params or 'Y' in params %}
  {% set accel = (params.X|default(params.Y)|float, params.Y|default(params.X)|float)|min %}
  SET_VELOCITY_LIMIT ACCEL={accel} ACCEL_TO_DECEL={accel * 0.5}
  {% else %}
  SET_VELOCITY_LIMIT
  {% endif %}
  
[gcode_macro M191]
gcode:
      {% set s = params.S|float %}
      {% if params.S is defined %}
        SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.S|int}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s-4} MAXIMUM={s+10} 
      {% endif %}

[gcode_macro M600]
gcode:
  CHANGE_FILAMENT  

[gcode_macro M601]
gcode:
    CHANGE_FILAMENT

[gcode_macro M900]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
  {% endif %}

[gcode_macro SAUVEGARDER]
description: Sauvegarder la configuration
gcode:
  SAVE_CONFIG

[gcode_macro UNLOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=unload_state
  G91
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
    M117 Heating...
    # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
    M109 S{params.TEMP|default(220, true)}
  {% endif %}
  M117 Unloading filament...
  G92 E0.0
  G91
  G1 E-45 F5000
  G1 E-15 F1000
  G1 E-20 F1000
  G90
  G92 E0.0
  M400
  M117 Remove Filament Now!
  M300 S300 P1000
  M117 Filament unloaded!
  RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=load_state
  G91
  # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
  M117 Heating...
  M109 S{params.TEMP|default(220, true)}
  {% endif %}
  M117 Loading filament...
  # Load the filament into the hotend area.
  G92 E0.0
  G91
  G1 E70 F400
  G1 E40 F100
  G90
  G92 E0.0
  M400
  M117 Filament loaded!
  RESTORE_GCODE_STATE NAME=load_state
  
  ##################################################
# Verifications and Measurements with ADXL
##################################################

[gcode_macro ADXL_TEST]
description: ADXL Test
gcode:
  ACCELEROMETER_QUERY


[gcode_macro ADXL_NOISE]
description: Measure Accelerometer Noise
gcode:
  MEASURE_AXES_NOISE


[gcode_macro ADXL_AXE_X]
description: Measure X axis resonances
gcode:
  G28
  M400
  SHAPER_CALIBRATE AXIS=X


[gcode_macro ADXL_AXE_Y]
description: Measure Y axis resonances
gcode:
  G28
  M400
  SHAPER_CALIBRATE AXIS=Y

[gcode_macro SECURITY_OFFSET]
description: Apply a 2mm Safety Offset
gcode:
  SET_GCODE_OFFSET Z=+2
  RESPOND MSG="Safety Offset applied!"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.428707, -0.428707, -0.428707, -0.428707, -0.428707, -0.428707, -0.428707
#*# 	  -0.335349, -0.335349, -0.243821, -0.255139, -0.350573, -0.373766, -0.373766
#*# 	  -0.197142, -0.197142, -0.133480, -0.096967, -0.122382, -0.194518, -0.194518
#*# 	  -0.034716, -0.013401, -0.027416, -0.034339, -0.081791, -0.166429, -0.140835
#*# 	  -0.032178, -0.032178, -0.052345, -0.028071, 0.006703, 0.006379, 0.006379
#*# 	  -0.126442, -0.126442, -0.141282, -0.133634, -0.073851, -0.011777, -0.011777
#*# 	  -0.288177, -0.288177, -0.288177, -0.288177, -0.288177, -0.288177, -0.288177
#*# tension = 0.2
#*# min_x = -120.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = -120.0
#*# x_count = 7
#*# max_y = 120.0
#*# mesh_x_pps = 2
#*# max_x = 120.0
#*#
#*# [bed_mesh name]
#*# version = 1
#*# points =
#*# 	0.052500, -0.032500, 0.186250
#*# 	0.053750, -0.070000, 0.233750
#*# 	0.182500, 0.037500, 0.240000
#*# tension = 0.2
#*# min_x = 20.0
#*# algo = lagrange
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 50.0
#*# x_count = 3
#*# max_y = 200.0
#*# mesh_x_pps = 2
#*# max_x = 170.0
#*#
#*# [printer]
#*# delta_radius = 151.931727
#*#
#*# [stepper_a]
#*# angle = 209.825714
#*# arm_length = 315.000000
#*# position_endstop = 334.630627
#*#
#*# [stepper_b]
#*# angle = 329.541817
#*# arm_length = 315.000000
#*# position_endstop = 334.652615
#*#
#*# [stepper_c]
#*# angle = 90.000000
#*# arm_length = 315.000000
#*# position_endstop = 334.022060
#*#
#*# [delta_calibrate]
#*# height0 = 16.85
#*# height0_pos = 25425.333,25423.667,25374.667
#*# height1 = 16.85
#*# height1_pos = 30375.000,30435.000,22450.000
#*# height2 = 16.85
#*# height2_pos = 24736.000,33264.000,24698.000
#*# height3 = 16.85
#*# height3_pos = 22636.333,29546.333,29536.000
#*# height4 = 16.85
#*# height4_pos = 24641.667,24605.667,30771.667
#*# height5 = 16.85
#*# height5_pos = 28877.333,22808.667,28814.333
#*# height6 = 16.85
#*# height6_pos = 31958.000,24689.000,24612.000
